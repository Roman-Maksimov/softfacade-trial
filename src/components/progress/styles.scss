@import '../../styles/settings/colors';
@import '../../styles/mixins/animation';

$color-divider: $color-divider;
$progress-height: 4px;
$progress-main-color: $color-green;
$progress-secondary-color: $color-lightblue;
$progress-disabled-color: $color-divider;
$circle-wrapper-width: 60;
$circle-radius: 25;
$scale-ratio: $circle-radius / 20;

// scss-lint:disable ColorVariable
$colors: (
  $color-lightblue,
  #de3e35,
  #f7c223,
  #1b9a59,
  #b746af,
  #98aa2d
);
// scss-lint:enable ColorVariable

.linear {
  display: inline-block;
  position: relative;
  background: $color-divider;
  width: 100%;
  height: $progress-height;
  overflow: hidden;

  &.indeterminate .value {
    transform-origin: center center;
    animation: linear-indeterminate-bar 1s linear infinite;
  }
}

.value,
.buffer {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transform: scaleX(0);
  transform-origin: left center;

}

.value {
  background-color: $progress-main-color;
}

.buffer {
  background-image: linear-gradient(to right, $progress-secondary-color, $progress-secondary-color),
    linear-gradient(to right, $progress-main-color, $progress-main-color);
}

.circular {
  display: inline-block;
  position: relative;
  transform: rotate(-90deg);
  width: $circle-wrapper-width * 1px;
  height: $circle-wrapper-width * 1px;

  &.indeterminate {
    .circle {
      animation: circular-indeterminate-bar-rotate 2s linear infinite;
    }

    .path {
      animation: circular-indeterminate-bar-dash 1.5s ease-in-out infinite;
      stroke-dasharray: $scale-ratio * 1, $scale-ratio * 200;
      stroke-dashoffset: 0;
    }

    &.multicolor .path {
      animation: circular-indeterminate-bar-dash 1.5s ease-in-out infinite,
        colors calc(1.5s * 4) ease-in-out infinite;
    }
  }
}

.circular[disabled],
.linear[disabled] {
  .value {
    background-color: $progress-disabled-color;
  }

  .buffer {
    background-image: linear-gradient(to right, $progress-secondary-color, $progress-secondary-color),
      linear-gradient(to right, $progress-disabled-color, $progress-disabled-color);
  }
}

.circle {
  width: 100%;
  height: 100%;
}

.path,
.pathBuffer {
  @include transition(stroke-dasharray);

  fill: none;
  stroke: $progress-main-color;
  stroke-dasharray: 0, $scale-ratio * 200;
  stroke-dashoffset: 0;
  stroke-linecap: round;
  stroke-miterlimit: 20;
  stroke-width: 4;
}

.pathBuffer {
  opacity: .2;
  stroke-dashoffset: 10px;
}

@keyframes linear-indeterminate-bar {
  0% {
    transform: translate(-50%) scaleX(0);
  }

  50% {
    transform: translate(-0%) scaleX(.3);
  }

  100% {
    transform: translate(50%) scaleX(0);
  }
}

@keyframes circular-indeterminate-bar-rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes circular-indeterminate-bar-dash {
  0% {
    stroke-dasharray: $scale-ratio * 1, $scale-ratio * 200;
    stroke-dashoffset: $scale-ratio * 0;
  }

  50% {
    stroke-dasharray: $scale-ratio * 89, $scale-ratio * 200;
    stroke-dashoffset: $scale-ratio * -35;
  }

  100% {
    stroke-dasharray: $scale-ratio * 89, $scale-ratio * 200;
    stroke-dashoffset: $scale-ratio * -124;
  }
}

@keyframes colors {
  0% {
    stroke: nth($colors, 1);
  }

  25% {
    stroke: nth($colors, 2);
  }

  50% {
    stroke: nth($colors, 3);
  }

  75% {
    stroke: nth($colors, 4);
  }

  100% {
    stroke: nth($colors, 1);
  }
}
